{%- comment -%}
  Renders the product price

  Accepts:
  - block {block} - Block object
  - product {product} - Product object
  - use_variant {boolean} - Whether to use the first available variant or the product itself
  - product_save_amount {boolean} - Whether to show the saved amount
  - product_save_type {'dollar'|'percent'} - Savings display style

  Usage:
  {% render 'block-price' block: block %}
{%- endcomment -%}

{% render 'stylesheet', name: 'component.block-price.css' %}

{%- liquid
  assign use_variant = use_variant | default: true
  assign target = product

  if use_variant
    assign target = product.selected_or_first_available_variant
  endif

  assign compare_at_price = target.compare_at_price
  assign price = target.price | default: 1999
  assign available = target.available | default: false
  assign product_save_amount = product_save_amount | default: settings.product_save_amount, allow_false: true | default: true, allow_false: true
  assign product_save_type = product_save_type | default: settings.product_save_type | default: 'dollar'
  assign saved_amount = target.compare_at_price | minus: target.price | times: 100.0 | divided_by: target.compare_at_price | round | append: '%'

  if product_save_type == 'dollar'
    assign saved_amount = target.compare_at_price | minus: target.price | money_without_trailing_zeros
  endif
-%}

<block-price class="block-price" data-section-id="{{ section.id }}" {{ block.shopify_attributes }}>
  <span class="block-price__label">
    {% render 't-with-fallback', key: 'labels.price', fallback: 'Price' %}
  </span>
  <div
    class="block-price__container heading-font-stack h4"
    data-price-container
    {% unless available %}
      data-sold-out=""
    {% endunless %}
    {% if compare_at_price > price %}
      data-on-sale=""
    {% endif %}
    {% if target.unit_price_measurement %}
      data-unit-price=""
    {% endif %}
  >
    <div class="block-price__regular">
      <span class="visually-hidden">
        {% render 't-with-fallback', key: 'labels.regular_price', fallback: 'Regular price' %}
      </span>
      <span>
        {%- render 'price', price: price -%}
      </span>
    </div>

    <div class="block-price__sale">
      {%- unless product.price_varies == false and product.compare_at_price_varies %}
        <span class="visually-hidden">
          {% render 't-with-fallback', key: 'labels.regular_price', fallback: 'Regular price' %}
        </span>
        <span>
          <s>
            {%- render 'price', price: compare_at_price -%}
          </s>
        </span>
      {%- endunless -%}

      <span class="visually-hidden">
        {% render 't-with-fallback', key: 'labels.sale_price', fallback: 'Sale price' %}
      </span>

      <span>
        {%- render 'price', price: price -%}
      </span>
    </div>

    <small class="block-price__unit-price">
      <span>
        <span>
          {%- render 'price', price: target.unit_price -%}
        </span>
        <span>/</span>
        <span>
          {%- if target.unit_price_measurement.reference_value != 1 -%}
            {{- target.unit_price_measurement.reference_value -}}
          {%- endif -%}
          {{ target.unit_price_measurement.reference_unit }}
        </span>
      </span>
    </small>

    {%- if product_save_amount -%}
      <span class="block-price__save">
        {% assign info_save_amount = 'info.save_amount' | t: saved_amount: saved_amount %}
        {%- capture fallback_info_save_amount -%}
          Save {{ saved_amount }}
        {%- endcapture -%}
        {% render 't-with-fallback', t: info_save_amount, fallback: fallback_info_save_amount %}
      </span>
    {%- endif -%}
  </div>
</block-price>

<script type="module">
  import 'component.block-price'
</script>
